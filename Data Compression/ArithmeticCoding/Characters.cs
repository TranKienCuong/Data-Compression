using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Data_Compression
{
    public static class Characters
    {
        public static Dictionary<int, Tuple<double, double>> RANGES = new Dictionary<int, Tuple<double, double>>();

        public static void Init()
        {
            RANGES[0] = Tuple.Create(0.0, 0.00166); // ?
            RANGES[1] = Tuple.Create(0.00166, 0.00322); // 
            RANGES[2] = Tuple.Create(0.00322, 0.00478); // 
            RANGES[3] = Tuple.Create(0.00478, 0.00634); // 
            RANGES[4] = Tuple.Create(0.00634, 0.0079); // 
            RANGES[5] = Tuple.Create(0.0079, 0.00946); // 
            RANGES[6] = Tuple.Create(0.00946, 0.01102); // 
            RANGES[7] = Tuple.Create(0.01102, 0.01258); // 
            RANGES[8] = Tuple.Create(0.01258, 0.01414); // 
            RANGES[9] = Tuple.Create(0.01414, 0.0157); // 	
            RANGES[10] = Tuple.Create(0.0157, 0.03145); // break line
            RANGES[11] = Tuple.Create(0.03145, 0.03301); // 
            RANGES[12] = Tuple.Create(0.03301, 0.03457); // 
            RANGES[13] = Tuple.Create(0.03457, 0.05032); // break line
            RANGES[14] = Tuple.Create(0.05032, 0.05188); // 
            RANGES[15] = Tuple.Create(0.05188, 0.05344); // 
            RANGES[16] = Tuple.Create(0.05344, 0.055); // 
            RANGES[17] = Tuple.Create(0.055, 0.05656); // 
            RANGES[18] = Tuple.Create(0.05656, 0.05812); // 
            RANGES[19] = Tuple.Create(0.05812, 0.05968); // 
            RANGES[20] = Tuple.Create(0.05968, 0.06124); // 
            RANGES[21] = Tuple.Create(0.06124, 0.0628); // 
            RANGES[22] = Tuple.Create(0.0628, 0.06436); // 
            RANGES[23] = Tuple.Create(0.06436, 0.06592); // 
            RANGES[24] = Tuple.Create(0.06592, 0.06748); // 
            RANGES[25] = Tuple.Create(0.06748, 0.06904); // 
            RANGES[26] = Tuple.Create(0.06904, 0.0706); // 
            RANGES[27] = Tuple.Create(0.0706, 0.07216); // 
            RANGES[28] = Tuple.Create(0.07216, 0.07372); // 
            RANGES[29] = Tuple.Create(0.07372, 0.07528); // 
            RANGES[30] = Tuple.Create(0.07528, 0.07684); // 
            RANGES[31] = Tuple.Create(0.07684, 0.0784); // 
            RANGES[32] = Tuple.Create(0.0784, 0.194); // space
            RANGES[33] = Tuple.Create(0.194, 0.19733); // !
            RANGES[34] = Tuple.Create(0.19733, 0.19933); // "
            RANGES[35] = Tuple.Create(0.19933, 0.20089); // #
            RANGES[36] = Tuple.Create(0.20089, 0.20245); // $
            RANGES[37] = Tuple.Create(0.20245, 0.20401); // %
            RANGES[38] = Tuple.Create(0.20401, 0.20557); // &
            RANGES[39] = Tuple.Create(0.20557, 0.21408); // '
            RANGES[40] = Tuple.Create(0.21408, 0.21586); // (
            RANGES[41] = Tuple.Create(0.21586, 0.21763); // )
            RANGES[42] = Tuple.Create(0.21763, 0.21942); // *
            RANGES[43] = Tuple.Create(0.21942, 0.22098); // +
            RANGES[44] = Tuple.Create(0.22098, 0.23207); // ,
            RANGES[45] = Tuple.Create(0.23207, 0.23627); // -
            RANGES[46] = Tuple.Create(0.23627, 0.24168); // .
            RANGES[47] = Tuple.Create(0.24168, 0.24324); // /
            RANGES[48] = Tuple.Create(0.24324, 0.2448); // 0
            RANGES[49] = Tuple.Create(0.2448, 0.24636); // 1
            RANGES[50] = Tuple.Create(0.24636, 0.24792); // 2
            RANGES[51] = Tuple.Create(0.24792, 0.24948); // 3
            RANGES[52] = Tuple.Create(0.24948, 0.25104); // 4
            RANGES[53] = Tuple.Create(0.25104, 0.2526); // 5
            RANGES[54] = Tuple.Create(0.2526, 0.25416); // 6
            RANGES[55] = Tuple.Create(0.25416, 0.25572); // 7
            RANGES[56] = Tuple.Create(0.25572, 0.25728); // 8
            RANGES[57] = Tuple.Create(0.25728, 0.25884); // 9
            RANGES[58] = Tuple.Create(0.25884, 0.26132); // :
            RANGES[59] = Tuple.Create(0.26132, 0.26364); // ;
            RANGES[60] = Tuple.Create(0.26364, 0.2652); // <
            RANGES[61] = Tuple.Create(0.2652, 0.26676); // =
            RANGES[62] = Tuple.Create(0.26676, 0.26832); // >
            RANGES[63] = Tuple.Create(0.26832, 0.27067); // ?
            RANGES[64] = Tuple.Create(0.27067, 0.27223); // @
            RANGES[65] = Tuple.Create(0.27223, 0.2763); // A
            RANGES[66] = Tuple.Create(0.2763, 0.27822); // B
            RANGES[67] = Tuple.Create(0.27822, 0.28035); // C
            RANGES[68] = Tuple.Create(0.28035, 0.28266); // D
            RANGES[69] = Tuple.Create(0.28266, 0.28496); // E
            RANGES[70] = Tuple.Create(0.28496, 0.28681); // F
            RANGES[71] = Tuple.Create(0.28681, 0.2887); // G
            RANGES[72] = Tuple.Create(0.2887, 0.29138); // H
            RANGES[73] = Tuple.Create(0.29138, 0.29583); // I
            RANGES[74] = Tuple.Create(0.29583, 0.29742); // J
            RANGES[75] = Tuple.Create(0.29742, 0.2993); // K
            RANGES[76] = Tuple.Create(0.2993, 0.30124); // L
            RANGES[77] = Tuple.Create(0.30124, 0.30359); // M
            RANGES[78] = Tuple.Create(0.30359, 0.30562); // N
            RANGES[79] = Tuple.Create(0.30562, 0.30787); // O
            RANGES[80] = Tuple.Create(0.30787, 0.30968); // P
            RANGES[81] = Tuple.Create(0.30968, 0.31157); // Q
            RANGES[82] = Tuple.Create(0.31157, 0.31368); // R
            RANGES[83] = Tuple.Create(0.31368, 0.3161); // S
            RANGES[84] = Tuple.Create(0.3161, 0.31952); // T
            RANGES[85] = Tuple.Create(0.31952, 0.32134); // U
            RANGES[86] = Tuple.Create(0.32134, 0.32306); // V
            RANGES[87] = Tuple.Create(0.32306, 0.32555); // W
            RANGES[88] = Tuple.Create(0.32555, 0.32712); // X
            RANGES[89] = Tuple.Create(0.32712, 0.32913); // Y
            RANGES[90] = Tuple.Create(0.32913, 0.33069); // Z
            RANGES[91] = Tuple.Create(0.33069, 0.33226); // [
            RANGES[92] = Tuple.Create(0.33226, 0.33382); // \
            RANGES[93] = Tuple.Create(0.33382, 0.33539); // ]
            RANGES[94] = Tuple.Create(0.33539, 0.33695); // ^
            RANGES[95] = Tuple.Create(0.33695, 0.33852); // _
            RANGES[96] = Tuple.Create(0.33852, 0.34445); // `
            RANGES[97] = Tuple.Create(0.34445, 0.37816); // a
            RANGES[98] = Tuple.Create(0.37816, 0.38518); // b
            RANGES[99] = Tuple.Create(0.38518, 0.39563); // c
            RANGES[100] = Tuple.Create(0.39563, 0.41588); // d
            RANGES[101] = Tuple.Create(0.41588, 0.47023); // e
            RANGES[102] = Tuple.Create(0.47023, 0.47939); // f
            RANGES[103] = Tuple.Create(0.47939, 0.4906); // g
            RANGES[104] = Tuple.Create(0.4906, 0.52012); // h
            RANGES[105] = Tuple.Create(0.52012, 0.54842); // i
            RANGES[106] = Tuple.Create(0.54842, 0.55052); // j
            RANGES[107] = Tuple.Create(0.55052, 0.55632); // k
            RANGES[108] = Tuple.Create(0.55632, 0.57609); // l
            RANGES[109] = Tuple.Create(0.57609, 0.58517); // m
            RANGES[110] = Tuple.Create(0.58517, 0.61392); // n
            RANGES[111] = Tuple.Create(0.61392, 0.64691); // o
            RANGES[112] = Tuple.Create(0.64691, 0.65423); // p
            RANGES[113] = Tuple.Create(0.65423, 0.65628); // q
            RANGES[114] = Tuple.Create(0.65628, 0.67873); // r
            RANGES[115] = Tuple.Create(0.67873, 0.70506); // s
            RANGES[116] = Tuple.Create(0.70506, 0.74691); // t
            RANGES[117] = Tuple.Create(0.74691, 0.76188); // u
            RANGES[118] = Tuple.Create(0.76188, 0.76661); // v
            RANGES[119] = Tuple.Create(0.76661, 0.77778); // w
            RANGES[120] = Tuple.Create(0.77778, 0.77991); // x
            RANGES[121] = Tuple.Create(0.77991, 0.78995); // y
            RANGES[122] = Tuple.Create(0.78995, 0.79181); // z
            RANGES[123] = Tuple.Create(0.79181, 0.79337); // {
            RANGES[124] = Tuple.Create(0.79337, 0.79493); // |
            RANGES[125] = Tuple.Create(0.79493, 0.79649); // }
            RANGES[126] = Tuple.Create(0.79649, 0.79805); // ~
            RANGES[127] = Tuple.Create(0.79805, 0.79961); // 
            RANGES[128] = Tuple.Create(0.79961, 0.80117); // ?
            RANGES[129] = Tuple.Create(0.80117, 0.80273); // 
            RANGES[130] = Tuple.Create(0.80273, 0.80429); // ?
            RANGES[131] = Tuple.Create(0.80429, 0.80585); // ?
            RANGES[132] = Tuple.Create(0.80585, 0.80741); // ?
            RANGES[133] = Tuple.Create(0.80741, 0.80897); // ?
            RANGES[134] = Tuple.Create(0.80897, 0.81053); // ?
            RANGES[135] = Tuple.Create(0.81053, 0.81209); // ?
            RANGES[136] = Tuple.Create(0.81209, 0.81365); // ?
            RANGES[137] = Tuple.Create(0.81365, 0.81521); // ?
            RANGES[138] = Tuple.Create(0.81521, 0.81677); // ?
            RANGES[139] = Tuple.Create(0.81677, 0.81833); // ?
            RANGES[140] = Tuple.Create(0.81833, 0.81989); // ?
            RANGES[141] = Tuple.Create(0.81989, 0.82145); // 
            RANGES[142] = Tuple.Create(0.82145, 0.82301); // ?
            RANGES[143] = Tuple.Create(0.82301, 0.82457); // 
            RANGES[144] = Tuple.Create(0.82457, 0.82613); // 
            RANGES[145] = Tuple.Create(0.82613, 0.82769); // ?
            RANGES[146] = Tuple.Create(0.82769, 0.82925); // ?
            RANGES[147] = Tuple.Create(0.82925, 0.83081); // ?
            RANGES[148] = Tuple.Create(0.83081, 0.83237); // ?
            RANGES[149] = Tuple.Create(0.83237, 0.83393); // ?
            RANGES[150] = Tuple.Create(0.83393, 0.83549); // ?
            RANGES[151] = Tuple.Create(0.83549, 0.83705); // ?
            RANGES[152] = Tuple.Create(0.83705, 0.83861); // ?
            RANGES[153] = Tuple.Create(0.83861, 0.84017); // ?
            RANGES[154] = Tuple.Create(0.84017, 0.84173); // ?
            RANGES[155] = Tuple.Create(0.84173, 0.84329); // ?
            RANGES[156] = Tuple.Create(0.84329, 0.84485); // ?
            RANGES[157] = Tuple.Create(0.84485, 0.84641); // 
            RANGES[158] = Tuple.Create(0.84641, 0.84797); // ?
            RANGES[159] = Tuple.Create(0.84797, 0.84953); // ?
            RANGES[160] = Tuple.Create(0.84953, 0.85109); //  
            RANGES[161] = Tuple.Create(0.85109, 0.85265); // ¡
            RANGES[162] = Tuple.Create(0.85265, 0.85421); // ¢
            RANGES[163] = Tuple.Create(0.85421, 0.85577); // £
            RANGES[164] = Tuple.Create(0.85577, 0.85733); // ¤
            RANGES[165] = Tuple.Create(0.85733, 0.85889); // ¥
            RANGES[166] = Tuple.Create(0.85889, 0.86045); // ¦
            RANGES[167] = Tuple.Create(0.86045, 0.86201); // §
            RANGES[168] = Tuple.Create(0.86201, 0.86357); // ¨
            RANGES[169] = Tuple.Create(0.86357, 0.86513); // ©
            RANGES[170] = Tuple.Create(0.86513, 0.86669); // ª
            RANGES[171] = Tuple.Create(0.86669, 0.86825); // «
            RANGES[172] = Tuple.Create(0.86825, 0.86981); // ¬
            RANGES[173] = Tuple.Create(0.86981, 0.87137); // ­
            RANGES[174] = Tuple.Create(0.87137, 0.87293); // ®
            RANGES[175] = Tuple.Create(0.87293, 0.87449); // ¯
            RANGES[176] = Tuple.Create(0.87449, 0.87605); // °
            RANGES[177] = Tuple.Create(0.87605, 0.87761); // ±
            RANGES[178] = Tuple.Create(0.87761, 0.87917); // ²
            RANGES[179] = Tuple.Create(0.87917, 0.88073); // ³
            RANGES[180] = Tuple.Create(0.88073, 0.88229); // ´
            RANGES[181] = Tuple.Create(0.88229, 0.88385); // µ
            RANGES[182] = Tuple.Create(0.88385, 0.88541); // ¶
            RANGES[183] = Tuple.Create(0.88541, 0.88697); // ·
            RANGES[184] = Tuple.Create(0.88697, 0.88853); // ¸
            RANGES[185] = Tuple.Create(0.88853, 0.89009); // ¹
            RANGES[186] = Tuple.Create(0.89009, 0.89165); // º
            RANGES[187] = Tuple.Create(0.89165, 0.89321); // »
            RANGES[188] = Tuple.Create(0.89321, 0.89477); // ¼
            RANGES[189] = Tuple.Create(0.89477, 0.89633); // ½
            RANGES[190] = Tuple.Create(0.89633, 0.89789); // ¾
            RANGES[191] = Tuple.Create(0.89789, 0.89945); // ¿
            RANGES[192] = Tuple.Create(0.89945, 0.90101); // À
            RANGES[193] = Tuple.Create(0.90101, 0.90257); // Á
            RANGES[194] = Tuple.Create(0.90257, 0.90413); // Â
            RANGES[195] = Tuple.Create(0.90413, 0.90569); // Ã
            RANGES[196] = Tuple.Create(0.90569, 0.90725); // Ä
            RANGES[197] = Tuple.Create(0.90725, 0.90881); // Å
            RANGES[198] = Tuple.Create(0.90881, 0.91037); // Æ
            RANGES[199] = Tuple.Create(0.91037, 0.91193); // Ç
            RANGES[200] = Tuple.Create(0.91193, 0.91349); // È
            RANGES[201] = Tuple.Create(0.91349, 0.91505); // É
            RANGES[202] = Tuple.Create(0.91505, 0.91661); // Ê
            RANGES[203] = Tuple.Create(0.91661, 0.91817); // Ë
            RANGES[204] = Tuple.Create(0.91817, 0.91973); // Ì
            RANGES[205] = Tuple.Create(0.91973, 0.92129); // Í
            RANGES[206] = Tuple.Create(0.92129, 0.92285); // Î
            RANGES[207] = Tuple.Create(0.92285, 0.92441); // Ï
            RANGES[208] = Tuple.Create(0.92441, 0.92597); // Ð
            RANGES[209] = Tuple.Create(0.92597, 0.92753); // Ñ
            RANGES[210] = Tuple.Create(0.92753, 0.92909); // Ò
            RANGES[211] = Tuple.Create(0.92909, 0.93065); // Ó
            RANGES[212] = Tuple.Create(0.93065, 0.93221); // Ô
            RANGES[213] = Tuple.Create(0.93221, 0.93377); // Õ
            RANGES[214] = Tuple.Create(0.93377, 0.93533); // Ö
            RANGES[215] = Tuple.Create(0.93533, 0.93689); // ×
            RANGES[216] = Tuple.Create(0.93689, 0.93845); // Ø
            RANGES[217] = Tuple.Create(0.93845, 0.94001); // Ù
            RANGES[218] = Tuple.Create(0.94001, 0.94157); // Ú
            RANGES[219] = Tuple.Create(0.94157, 0.94313); // Û
            RANGES[220] = Tuple.Create(0.94313, 0.94469); // Ü
            RANGES[221] = Tuple.Create(0.94469, 0.94625); // Ý
            RANGES[222] = Tuple.Create(0.94625, 0.94781); // Þ
            RANGES[223] = Tuple.Create(0.94781, 0.94937); // ß
            RANGES[224] = Tuple.Create(0.94937, 0.95093); // à
            RANGES[225] = Tuple.Create(0.95093, 0.95249); // á
            RANGES[226] = Tuple.Create(0.95249, 0.95405); // â
            RANGES[227] = Tuple.Create(0.95405, 0.95561); // ã
            RANGES[228] = Tuple.Create(0.95561, 0.95717); // ä
            RANGES[229] = Tuple.Create(0.95717, 0.95873); // å
            RANGES[230] = Tuple.Create(0.95873, 0.96029); // æ
            RANGES[231] = Tuple.Create(0.96029, 0.96185); // ç
            RANGES[232] = Tuple.Create(0.96185, 0.96341); // è
            RANGES[233] = Tuple.Create(0.96341, 0.96497); // é
            RANGES[234] = Tuple.Create(0.96497, 0.96653); // ê
            RANGES[235] = Tuple.Create(0.96653, 0.96809); // ë
            RANGES[236] = Tuple.Create(0.96809, 0.96965); // ì
            RANGES[237] = Tuple.Create(0.96965, 0.97121); // í
            RANGES[238] = Tuple.Create(0.97121, 0.97277); // î
            RANGES[239] = Tuple.Create(0.97277, 0.97433); // ï
            RANGES[240] = Tuple.Create(0.97433, 0.97589); // ð
            RANGES[241] = Tuple.Create(0.97589, 0.97745); // ñ
            RANGES[242] = Tuple.Create(0.97745, 0.97901); // ò
            RANGES[243] = Tuple.Create(0.97901, 0.98057); // ó
            RANGES[244] = Tuple.Create(0.98057, 0.98213); // ô
            RANGES[245] = Tuple.Create(0.98213, 0.98369); // õ
            RANGES[246] = Tuple.Create(0.98369, 0.98525); // ö
            RANGES[247] = Tuple.Create(0.98525, 0.98681); // ÷
            RANGES[248] = Tuple.Create(0.98681, 0.98837); // ø
            RANGES[249] = Tuple.Create(0.98837, 0.98993); // ù
            RANGES[250] = Tuple.Create(0.98993, 0.99149); // ú
            RANGES[251] = Tuple.Create(0.99149, 0.99305); // û
            RANGES[252] = Tuple.Create(0.99305, 0.99461); // ü
            RANGES[253] = Tuple.Create(0.99461, 0.99617); // ý
            RANGES[254] = Tuple.Create(0.99617, 0.99773); // þ
            RANGES[255] = Tuple.Create(0.99773, 0.99939); // ÿ
            RANGES[256] = Tuple.Create(0.99939, 1.0); // terminator
        }
    }
}
